import React, { Component, Fragment } from 'react';
import Helmet from 'react-helmet';
import thunk from 'redux-thunk';

import { createBrowserHistory } from 'history';
import { render } from 'react-dom';
import { applyMiddleware, combineReducers, createStore } from 'redux';
import { Provider } from 'react-redux';
import { Router, Route, Switch, withRouter } from 'react-router';
import { routerMiddleware, routerReducer, syncHistoryWithStore } from 'react-router-redux';

{{#if pages}}
// pages
{{#each pages}}
import {{{case @key 'pascal'}}}Page from './pages/{{{case @key 'kebab'}}}/{{{case @key 'pascal'}}}';
{{/each}}

{{/if}}
{{#if reducers}}
// reducers
{{#each reducers}}
import {{{@key}}}Reducer from './reducers/{{{@key}}}';
{{/each}}

{{/if}}
{{#if templates}}
// templates
{{#each templates}}
import {{{case @key 'pascal'}}}Template from './templates/{{{case @key 'kebab'}}}/{{{case @key 'pascal'}}}';
{{/each}}

{{/if}}
import './App.sass';

const history = createBrowserHistory({ basename: '/' });
const router = routerMiddleware(history);

const store = createStore(
  combineReducers({
    routing: routerReducer,
    {{#each reducers}}
    {{{@key}}}: {{{@key}}}Reducer{{#unless @last}},{{/unless}}
    {{/each}}
  }),
  applyMiddleware(
    thunk,
    router
  )
);

class ScrollToTopComponent extends Component {
  componentDidUpdate(prevProps) {
    if (this.props.location !== prevProps.location) {
      window.scrollTo(0, 0);
    }
  }

  render() {
    return this.props.children;
  }
}

const ScrollToTop = withRouter(ScrollToTopComponent);

class App extends Component {
  render() {
    return (
      <Provider store={store}>
        <Router history={history}>
          <ScrollToTop>
            <Helmet
              titleTemplate="%s | {{{title}}}"
            />
            {{#each routes}}
            <{{{case template 'pascal'}}}Template{{#if paths}}>
              <Switch>
                {{#each paths}}
                <Route path="{{#if index}}/{{else}}{{@key}}{{/if}}" component={ {{{case page 'pascal'}}}Page }{{#if index}} exact{{/if}} />
                {{/each}}
                {{#if error}}
                <Route component={ {{{case error.page 'pascal'}}}Page } />
                {{/if}}
              </Switch>
            </{{{case template 'pascal'}}}Template>{{else}} />{{/if}}
            {{/each}}
          </ScrollToTop>
        </Router>
      </Provider>
    );
  }
}

export default App;
